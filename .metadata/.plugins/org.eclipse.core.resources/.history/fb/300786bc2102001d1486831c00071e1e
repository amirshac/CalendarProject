package ajbc.doodle.calendar.daos;

import java.util.List;

import org.hibernate.criterion.Criterion;
import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Restrictions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.hibernate5.HibernateTemplate;
import org.springframework.stereotype.Repository;

import ajbc.doodle.calendar.entities.Event;
import ajbc.doodle.calendar.entities.Notification;
import ajbc.doodle.calendar.entities.User;

@SuppressWarnings("unchecked")
@Repository("HtNotificationDao")
public class HtNotificationDao implements NotificationDao {
	
	@Autowired
	private HibernateTemplate template;

	@Override
	public void addNotification(Notification notification) throws DaoException {
		template.persist(notification);
	}
	
	@Override
	public void updateNotification(Notification notification) throws DaoException {
		template.merge(notification);
	}
		
	@Override
	public Notification getNotificationById(int notificationId) throws DaoException {
		Notification notification = template.get(Notification.class, notificationId);
		if (notification == null)
			throw new DaoException("No notification in DB with ID: " + notificationId);
		return notification;
	}
	
	@Override
	public List<Notification> getAllNotifications() throws DaoException{
		DetachedCriteria criteria = DetachedCriteria.forClass(Notification.class);
		Criterion criterion = Restrictions.eqOrIsNull("deleted", false));
		criteria
		return (List<Notification>) template.findByCriteria(criteria);
	}
	
	@Override
	public void deleteNotification(int notificationId) throws DaoException{
		Notification notification = getNotificationById(notificationId);
		notification.setDeleted(true);
		updateNotification(notification);
	}
	
}
